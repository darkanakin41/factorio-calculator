<?php

namespace App\Entity;

use ApiPlatform\Core\Annotation\ApiFilter;
use ApiPlatform\Core\Annotation\ApiResource;
use ApiPlatform\Core\Serializer\Filter\PropertyFilter;
use Doctrine\ORM\Mapping as ORM;
use Ramsey\Uuid\UuidInterface;

/**
 * @ApiResource(
 *     itemOperations={
 *          "get",
 *          "patch",
 *          "delete"
 *     },
 *     collectionOperations={
 *          "get"={"maximum_items_per_page"=100000},
 *          "post",
 *     },
 *     attributes={"pagination_client_items_per_page"=true, "pagination_fetch_join_collection"=true}
 * )
 * @ApiFilter(PropertyFilter::class, arguments={"parameterName": "props" })
 * @ORM\Entity(repositoryClass="App\Repository\SaveRepository")
 * @ORM\Table(name="factorio_save")
 */
class Save
{
    /**
     * @var UuidInterface $id An autogenerated unique ID for the item
     * @ORM\Id()
     * @ORM\Column(type="uuid", unique=true)
     * @ORM\GeneratedValue(strategy="CUSTOM")
     * @ORM\CustomIdGenerator(class="Ramsey\Uuid\Doctrine\UuidGenerator")
     */
    private $id;

    /**
     * @var string $name The name of the save
     * @ORM\Column(type="string", length=255)
     */
    private $name;

    /**
     * @var boolean $public The name of the save
     * @ORM\Column(type="boolean", options={"default"=false})
     */
    private $public = false;

    /**
     * The associated Mod
     *
     * @var User $mod
     *
     * @ORM\ManyToOne(targetEntity="App\Entity\USer")
     * @ORM\JoinColumn(name="owner_id", referencedColumnName="id")
     */
    private $owner;

    public function getId()
    {
        return $this->id;
    }

    public function getName(): ?string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;

        return $this;
    }

    public function getOwner(): ?USer
    {
        return $this->owner;
    }

    public function setOwner(?USer $owner): self
    {
        $this->owner = $owner;

        return $this;
    }
}
