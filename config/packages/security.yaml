security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

  encoders:
    FOS\UserBundle\Model\UserInterface: bcrypt

  role_hierarchy:
    ROLE_ADMIN:       ROLE_USER
    ROLE_SUPER_ADMIN: ROLE_ADMIN

  providers:
    fos_userbundle:
      id: fos_user.user_provider.username

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    api_login:
      pattern:  ^/api/auth/login
      stateless: true
      anonymous: true
      json_login:
        provider: fos_userbundle
        check_path:               /api/auth/login
        success_handler:          lexik_jwt_authentication.handler.authentication_success
        failure_handler:          lexik_jwt_authentication.handler.authentication_failure
      provider: fos_userbundle
    api_token_refresh:
      pattern:  ^/api/auth/token-refresh
      stateless: true
      anonymous: true
    api:
      pattern: ^/api
      stateless: true
      anonymous: true
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator
    main:
      pattern: ^/
      user_checker: security.user_checker
      form_login:
        provider: fos_userbundle
        csrf_token_generator: security.csrf.token_manager

      logout:       true
      anonymous:    true
      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api/auth/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/auth/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/auth/logout, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/auth/token-refresh, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api, role: IS_AUTHENTICATED_ANONYMOUSLY }
